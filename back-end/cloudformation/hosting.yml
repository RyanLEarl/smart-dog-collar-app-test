Resources:
  CloudfrontS3OriginAccess:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront OAI for ${self:service}-${opt:stage, self:custom.default_stage}
  CloudFrontOrigin:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3WebsiteBucket
    Properties:
      DistributionConfig:
        Aliases:
          - ${self:custom.cname}
        Comment: ${self:service}-hosting-${opt:stage, self:custom.default_stage}
        Origins:
          - DomainName: !GetAtt S3WebsiteBucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "",
                  [
                    "origin-access-identity/cloudfront/",
                    !Ref CloudfrontS3OriginAccess,
                  ],
                ]
        Enabled: true
        HttpVersion: "http2"
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-response
              IncludeBody: false
              LambdaFunctionARN: ${self:custom.lambdaEdgeCloudfront}
        ViewerCertificate:
          AcmCertificateArn: ${self:custom.certArn}
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
  S3WebsiteBucket:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain
    Properties:
      BucketName: ${self:service}-hosting-${opt:stage, self:custom.default_stage}
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
            MaxAge: 1800
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: S3WesitePolicy
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudfrontS3OriginAccess.S3CanonicalUserId
            Action:
              - s3:GetObject
              - s3:List*
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref S3WebsiteBucket, "/*"]]
              - !Join ["", ["arn:aws:s3:::", !Ref S3WebsiteBucket]]
      Bucket:
        Ref: S3WebsiteBucket
  GatewayResponseDefault4XX:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: "ApiGatewayRestApi"
