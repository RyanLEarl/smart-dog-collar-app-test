Resources:
  dogCollarTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${self:service}-${self:provider.stage}-snsTopic
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      # AccessControl: PublicRead
      BucketName: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
                  
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'PublicReadGetObject'
            Effect: 'Allow'
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - !GetAtt S3Bucket.Arn
                - '/*'
  IOTRule: 
    Type: AWS::IoT::TopicRule
    Properties: 
      RuleName: !Sub smart_dog_collar_${self:provider.stage}_${AWS::AccountId}_iot_rule
      TopicRulePayload: 
        AwsIotSqlVersion: '2016-03-23'
        RuleDisabled: false
        Sql: SELECT * FROM 'smart-dog-collar'
        Actions: 
          - Lambda:
              FunctionArn: !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-testArduinoProcessing

  ArduinoProcessedDataFifoQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    DependsOn: ArduinoProcessedDataFifoQueue
    Properties: 
      Queues: 
        - !Sub 'https://sqs.${self:provider.region}.amazonaws.com/${AWS::AccountId}/${self:service}-${self:provider.stage}-ArduinoProcessedDataQueue.fifo'
      PolicyDocument: 
        Statement: 
          -
            Action: 
              - "sqs:*"
            Effect: "Allow"
            Resource: !GetAtt ArduinoProcessedDataFifoQueue.Arn
            Principal: 
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"

  ArduinoProcessedDataFifoQueue:
    Type: "AWS::SQS::Queue"
    DependsOn: ArduinoProcessedDataDeadLetterQueue
    Properties:
      QueueName: !Sub ${self:service}-${self:provider.stage}-ArduinoProcessedDataQueue.fifo
      FifoQueue: true
      ContentBasedDeduplication : true
      VisibilityTimeout: 600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ArduinoProcessedDataDeadLetterQueue.Arn
        maxReceiveCount: 5

  ArduinoProcessedDataDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: !Sub ${self:service}-${self:provider.stage}-ArduinoProcessedDataDeadLetterQueue.fifo
Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content

  